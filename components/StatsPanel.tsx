'use client';

import React from 'react';
import { AgeGroup } from '@/types';

interface Stats {
  totalQuestions: number;
  correctAnswers: number;
  accuracy: number;
  timeSpent: number;
}

interface StatsPanelProps {
  stats: Stats;
  ageGroup: AgeGroup;
  className?: string;
}

const StatsPanel: React.FC<StatsPanelProps> = ({ stats, ageGroup, className = '' }) => {
  const formatTime = (milliseconds: number) => {
    const seconds = Math.floor(milliseconds / 1000);
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    
    if (minutes > 0) {
      return `${minutes}åˆ†${remainingSeconds}ç§’`;
    }
    return `${remainingSeconds}ç§’`;
  };

  const getAccuracyColor = (accuracy: number) => {
    if (accuracy >= 90) return 'text-green-600';
    if (accuracy >= 70) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getAccuracyBgColor = (accuracy: number) => {
    if (accuracy >= 90) return 'bg-green-100';
    if (accuracy >= 70) return 'bg-yellow-100';
    return 'bg-red-100';
  };

  const ageGroupEmojis = {
    [AgeGroup.PRESCHOOL]: "ðŸŒŸ",
    [AgeGroup.ELEMENTARY_LOW]: "ðŸš€", 
    [AgeGroup.ELEMENTARY_HIGH]: "ðŸŽ¯"
  };

  return (
    <div className={className}>

      {/* ç»Ÿè®¡é¡¹ç›® - ç´§å‡‘å¸ƒå±€ */}
      <div className="grid grid-cols-2 gap-3">
        {/* ç­”é¢˜è¿›åº¦ */}
        <div className="text-center p-1 rounded-lg" style={{ background: 'var(--primary-subtle)' }}>
          <div className="text-2xl font-bold" style={{ color: 'var(--primary)' }}>{stats.totalQuestions}</div>
          <div className="text-xs" style={{ color: 'var(--text-tertiary)' }}>å·²ç­”é¢˜æ•°</div>
        </div>

        {/* æ­£ç¡®ç­”æ¡ˆ */}
        <div className="text-center p-1 rounded-lg" style={{ background: 'var(--success-light)' }}>
          <div className="text-2xl font-bold" style={{ color: 'var(--success)' }}>{stats.correctAnswers}</div>
          <div className="text-xs" style={{ color: 'var(--text-tertiary)' }}>ç­”å¯¹é¢˜æ•°</div>
        </div>

        {/* æ­£ç¡®çŽ‡ */}
        <div className="text-center p-1 rounded-lg" style={{ background: 'var(--warning-light)' }}>
          <div className="text-2xl font-bold" style={{ color: 'var(--warning)' }}>
            {stats.totalQuestions > 0 ? Math.round(stats.accuracy) : 0}%
          </div>
          <div className="text-xs" style={{ color: 'var(--text-tertiary)' }}>æ­£ç¡®çŽ‡</div>
        </div>

        {/* ç”¨æ—¶ */}
        <div className="text-center p-1 rounded-lg" style={{ background: 'var(--error-light)' }}>
          <div className="text-lg font-bold" style={{ color: 'var(--error)' }}>{formatTime(stats.timeSpent)}</div>
          <div className="text-xs" style={{ color: 'var(--text-tertiary)' }}>å­¦ä¹ æ—¶é•¿</div>
        </div>
      </div>

    </div>
  );
};

export default StatsPanel;
